import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);
		Tree Tr = new Tree<>();
		Node<Integer> N1 = new Node<>(scanner.nextInt());
		Tr.setRootElement(N1);

		ArrayList<Node<Integer>> Nodi = new ArrayList<Node<Integer>>();
		Nodi.add(N1);

		while (scanner.hasNext()) {
			int Nodo1 = scanner.nextInt();
			if (Nodo1 == -1)
				break;
			scanner.next();
			int Nodo2 = scanner.nextInt();
			scanner.next();
			Node<Integer> Node = new Node<>(Nodo1);

			ListIterator<Node<Integer>> iter = Nodi.listIterator();
			while (iter.hasNext()) {
				Node<Integer> n = iter.next();
				if (n.getData() == Nodo2) {
					n.addChild(Node);
					iter.add(Node);
					System.out.println(Node);
				}
				// Nodi.add(Node);
				// CUNCURRENT
			}

		}

		System.out.println(Tr.toString());
		System.out.println(Nodi);

		for(Node<Integer> n :Nodi) {
			List<Node<Integer>> list = new ArrayList<Node<Integer>>();
			System.out.println(n.getData()+" -> "+Tr.valorePercorso(n, list));
			list.clear();
		}
		
		
	}
}