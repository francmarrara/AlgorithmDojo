import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

import org.jgrapht.alg.AllDirectedPaths;
import org.jgrapht.alg.ConnectivityInspector;
import org.jgrapht.alg.CycleDetector;
import org.jgrapht.alg.cycle.HawickJamesSimpleCycles;
import org.jgrapht.graph.DefaultEdge;

@SuppressWarnings("deprecation")
public class Test {

	@SuppressWarnings("deprecation")
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);

		int nCittà;
		int nSerbatoi;
		nCittà = scanner.nextInt();
		nSerbatoi = scanner.nextInt();
		String Vertex1;
		String Vertex2;
		StringGrafoOrientato g = new StringGrafoOrientato(DefaultEdge.class);
		ArrayList<String> città = new ArrayList<String>();
		int cont = 0;
		while(cont<nCittà) {
			String prova = scanner.next();
			g.addVertex(prova);
			città.add(prova);
			cont++;
			
		}

		while (scanner.hasNext()) {
			Vertex1 = scanner.next();
			scanner.next();
			Vertex2 = scanner.next();
			g.addEdge(Vertex1, Vertex2);

		}

		scanner.close();
		
System.out.println(g.inDegreeOf("Modiin")+g.outDegreeOf("Modiin"));
		
	
		
		
		
	}
	
	

}
